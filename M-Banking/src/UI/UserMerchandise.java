/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import RoundedField.RoundJPanel;
import ScrollBar.MyScrollBarUI;
import java.awt.Component;
import java.awt.Container;
import java.awt.Dimension;
import java.awt.Insets;
import java.awt.Point;
import java.awt.PopupMenu;
import java.awt.Rectangle;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import java.util.HashSet;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JViewport;
import javax.swing.ScrollPaneLayout;
import javax.swing.SwingUtilities;
import javax.swing.event.AncestorEvent;
import javax.swing.event.AncestorListener;
import m.banking.Log;
import m.banking.Merchandise;

/**
 *
 * @author jonat
 */
public class UserMerchandise extends javax.swing.JPanel
{

    /**
     * Creates new form UserMerchandise
     */
    public UserMerchandise(UserTransfer utf)
    {
        initComponents();
        ShowAllMerchandiseList();
        this.PointUser.setText("Point : " + utf.u.active.getPoint());
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        Back = new RoundJPanel(25);
        BackButton = new javax.swing.JLabel();
        PointUserPanel = new RoundJPanel(25);
        PointUser = new javax.swing.JLabel();
        Total = new RoundJPanel(25);
        TotalPoint = new javax.swing.JLabel();
        Reset = new RoundJPanel(25);
        jLabel5 = new javax.swing.JLabel();
        Submit =  new RoundJPanel(25);
        jLabel6 = new javax.swing.JLabel();
        Judul = new RoundJPanel(25);
        jLabel2 = new javax.swing.JLabel();
        scroll = new javax.swing.JScrollPane();
        IsiKonten = new RoundJPanel(25);

        setBackground(new java.awt.Color(250, 243, 243));

        Back.setBackground(new java.awt.Color(255, 255, 255));
        Back.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Back.setOpaque(false);

        BackButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/m/banking/Asset/Back.png"))); // NOI18N
        BackButton.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                BackButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout BackLayout = new javax.swing.GroupLayout(Back);
        Back.setLayout(BackLayout);
        BackLayout.setHorizontalGroup(
            BackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BackLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(BackButton)
                .addContainerGap())
        );
        BackLayout.setVerticalGroup(
            BackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BackLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(BackButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        PointUserPanel.setBackground(new java.awt.Color(255, 255, 255));
        PointUserPanel.setOpaque(false);

        PointUser.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N
        PointUser.setForeground(new java.awt.Color(0, 0, 0));
        PointUser.setText("a");

        javax.swing.GroupLayout PointUserPanelLayout = new javax.swing.GroupLayout(PointUserPanel);
        PointUserPanel.setLayout(PointUserPanelLayout);
        PointUserPanelLayout.setHorizontalGroup(
            PointUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PointUserPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PointUser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        PointUserPanelLayout.setVerticalGroup(
            PointUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PointUserPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PointUser, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Total.setBackground(new java.awt.Color(255, 255, 255));
        Total.setOpaque(false);

        TotalPoint.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N
        TotalPoint.setForeground(new java.awt.Color(0, 0, 0));
        TotalPoint.setText("Total : 0");

        javax.swing.GroupLayout TotalLayout = new javax.swing.GroupLayout(Total);
        Total.setLayout(TotalLayout);
        TotalLayout.setHorizontalGroup(
            TotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TotalLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(TotalPoint, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        TotalLayout.setVerticalGroup(
            TotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TotalLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(TotalPoint, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        Reset.setBackground(new java.awt.Color(255, 51, 51));
        Reset.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Reset.setOpaque(false);
        Reset.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                ResetMouseClicked(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(51, 51, 51));
        jLabel5.setText("Reset");

        javax.swing.GroupLayout ResetLayout = new javax.swing.GroupLayout(Reset);
        Reset.setLayout(ResetLayout);
        ResetLayout.setHorizontalGroup(
            ResetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ResetLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        ResetLayout.setVerticalGroup(
            ResetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ResetLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Submit.setBackground(new java.awt.Color(51, 255, 51));
        Submit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Submit.setOpaque(false);
        Submit.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                SubmitMouseClicked(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Submit");

        javax.swing.GroupLayout SubmitLayout = new javax.swing.GroupLayout(Submit);
        Submit.setLayout(SubmitLayout);
        SubmitLayout.setHorizontalGroup(
            SubmitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SubmitLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                .addContainerGap())
        );
        SubmitLayout.setVerticalGroup(
            SubmitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SubmitLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Judul.setBackground(new java.awt.Color(255, 255, 255));
        Judul.setOpaque(false);

        jLabel2.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Menu Merchandise");

        javax.swing.GroupLayout JudulLayout = new javax.swing.GroupLayout(Judul);
        Judul.setLayout(JudulLayout);
        JudulLayout.setHorizontalGroup(
            JudulLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JudulLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        JudulLayout.setVerticalGroup(
            JudulLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JudulLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                .addContainerGap())
        );

        scroll.setBorder(null);
        scroll.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        scroll.setOpaque(false);

        IsiKonten.setBackground(new java.awt.Color(250, 243, 243));
        IsiKonten.setOpaque(false);

        javax.swing.GroupLayout IsiKontenLayout = new javax.swing.GroupLayout(IsiKonten);
        IsiKonten.setLayout(IsiKontenLayout);
        IsiKontenLayout.setHorizontalGroup(
            IsiKontenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 470, Short.MAX_VALUE)
        );
        IsiKontenLayout.setVerticalGroup(
            IsiKontenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 442, Short.MAX_VALUE)
        );

        scroll.setViewportView(IsiKonten);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(Back, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Judul, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(PointUserPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(Reset, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(Submit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(Total, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(54, 54, 54))
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(scroll, javax.swing.GroupLayout.PREFERRED_SIZE, 470, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Back, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Judul, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(PointUserPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(scroll)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Total, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Submit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Reset, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(35, 35, 35))
        );

        scroll.setLayout(new ScrollPaneLayout()
        {
            @Override
            public void layoutContainer(Container parent)
            {
                JScrollPane scrollPane = (JScrollPane) parent;

                Rectangle availR = scrollPane.getBounds();
                availR.x = availR.y = 0;

                Insets parentInsets = parent.getInsets();
                availR.x = parentInsets.left;
                availR.y = parentInsets.top;
                availR.width -= parentInsets.left + parentInsets.right;
                availR.height -= parentInsets.top + parentInsets.bottom;

                Rectangle vsbR = new Rectangle();
                vsbR.width = 12;
                vsbR.height = availR.height;
                vsbR.x = availR.x + availR.width - vsbR.width;
                vsbR.y = availR.y;

                if (viewport != null)
                {
                    viewport.setBounds(availR);
                }
                if (vsb != null)
                {
                    vsb.setVisible(true);
                    vsb.setBounds(vsbR);
                }
            }
        });
        scroll.getVerticalScrollBar().setUI(new MyScrollBarUI());
        MouseAdapter ma = new MouseAdapter()
        {

            private Point origin;

            @Override
            public void mousePressed(MouseEvent e)
            {
                origin = new Point(e.getPoint());
            }

            @Override
            public void mouseReleased(MouseEvent e)
            {
            }

            @Override
            public void mouseDragged(MouseEvent e)
            {
                if (origin != null)
                {
                    JViewport viewPort = (JViewport) SwingUtilities.getAncestorOfClass(JViewport.class, IsiKonten);
                    if (viewPort != null)
                    {
                        int deltaX = origin.x - e.getX();
                        int deltaY = origin.y - e.getY();

                        Rectangle view = viewPort.getViewRect();
                        view.x += deltaX;
                        view.y += deltaY;

                        IsiKonten.scrollRectToVisible(view);
                    }
                }
            }

        };

        IsiKonten.addMouseListener(ma);
        IsiKonten.addMouseMotionListener(ma);
    }// </editor-fold>//GEN-END:initComponents
    
    UserTransfer utf;
    private void BackButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BackButtonMouseClicked
        // TODO add your handling code here:
        utf.u.getContent().removeAll();
        utf.setVisible(true);
        utf.setBounds(0,0, 500, 750);
        utf.u.getContent().add(utf);
        utf.u.getContent().revalidate();
        utf.u.getContent().repaint();
    }//GEN-LAST:event_BackButtonMouseClicked

    private void ResetMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_ResetMouseClicked
    {//GEN-HEADEREND:event_ResetMouseClicked
        // TODO add your handling code here:
        ShowAllMerchandiseList();
    }//GEN-LAST:event_ResetMouseClicked

    private void SubmitMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_SubmitMouseClicked
    {//GEN-HEADEREND:event_SubmitMouseClicked
        // TODO add your handling code here:
        if(utf.u.active.getPoint() - total < 0)
        {
            JOptionPane.showMessageDialog(this,"Maaf, Point yang Anda Kurang.");
        }
        else
        {
            JOptionPane.showMessageDialog(this,"Berhasil Menukar Point dengan Merchandise");
            ArrayList<Log> logAdmin = new ArrayList<>();
            try {
                FileInputStream file = new FileInputStream("logAdmin.ser");
                ObjectInputStream in = new ObjectInputStream(file);

                logAdmin = (ArrayList<Log>) in.readObject();

                in.close();
                file.close();
            }
            catch(IOException ex) {
                System.out.println("IOException is caught");
            }
            catch(ClassNotFoundException ex) {
                System.out.println("ClassNotFoundException is caught");
            }
            //<No>. <Date> <Nama> <Activity>
            String date = utf.u.d1.getD1().getDate() + "/" + utf.u.d1.getD1().getMonth() + "/" + utf.u.d1.getD1().getYear();
            logAdmin.add(0, new Log(date + "-" + utf.u.active.getNoRekening() + " Success exchange point"));
            System.out.println(date);
            System.out.println(logAdmin.get(0).getLog());
            try {
                FileOutputStream file = new FileOutputStream("logAdmin.ser");
                ObjectOutputStream out = new ObjectOutputStream(file);

                out.writeObject(logAdmin);

                out.close();
                file.close();

                System.out.println("Object has been serialized");

            }
            catch(IOException ex) {
                System.out.println("IOException is caught2");
                System.out.println(ex);
            }
        }
           
    }//GEN-LAST:event_SubmitMouseClicked
    public void pass(UserTransfer utf)
    {
        this.utf=utf;
    }
    
    int JumlahMerchandise = 0;
    
    public void ShowAllMerchandiseList()
    {
        JumlahMerchandise = 0;
        ArrayList<Merchandise> myMerchandise = new ArrayList<>();
        try 
        {
            FileInputStream file = new FileInputStream("Merchandise.ser");
            ObjectInputStream in = new ObjectInputStream(file);

            myMerchandise = (ArrayList<Merchandise>) in.readObject();

            in.close();
            file.close();
        }
        catch(IOException ex) 
        {
            System.out.println("IOException is caught1");
        }
        catch(ClassNotFoundException ex) 
        {
            System.out.println("ClassNotFoundException is caught");
        }
        ArrayList<ProductList> pl = new ArrayList<>();
        
        IsiKonten.removeAll();
        if ((95+10)*myMerchandise.size() >= 442)
        {
            IsiKonten.setPreferredSize(new Dimension(467, (95+10)*myMerchandise.size()));
        }
        else 
        {
            IsiKonten.setPreferredSize(new Dimension(467, 442));
        }
        
        for (int i = 0; i < myMerchandise.size(); i++) 
        {
            pl.add(new ProductList());
            pl.get(i).getNamaProduct().setText(myMerchandise.get(i).getNamaMerchandise());
            pl.get(i).getPointProductList().setText("Point : " + String.valueOf(myMerchandise.get(i).getPoint()));
            pl.get(i).setBounds(0, (95+10)*i, 450,100);
            pl.get(i).setVisible(true);
            pl.get(i).getMinus().addMouseListener(new MouseAdapter()
            {
                public void mouseClicked(MouseEvent e)
                {
                    SetTotal(pl);
                }
            });
            pl.get(i).getPlus().addMouseListener(new MouseAdapter()
            {
                public void mouseClicked(MouseEvent e)
                {
                    SetTotal(pl);
                }
            });
//            pl.get(i).getMinus().addAncestorListener(new EventHandler(pl));
//            pl.get(i).getPlus().addAncestorListener(new EventHandler(pl));
            pl.get(i).setPoint(myMerchandise.get(i).getPoint());
            IsiKonten.add(pl.get(i));
            JumlahMerchandise++;
        }
        IsiKonten.revalidate();
        IsiKonten.repaint();
        System.out.println("jumlah merchandise : " + JumlahMerchandise);
    }
    
    class EventHandler implements AncestorListener
    {
        ArrayList<ProductList> pl;
        public EventHandler (ArrayList<ProductList> pl)
        {
            this.pl = pl;
        }
        @Override
        public void ancestorAdded(AncestorEvent event) 
        {
            SetTotal(pl);
        }

        @Override
        public void ancestorMoved(AncestorEvent event) 
        {
            SetTotal(pl);
        }

        @Override
        public void ancestorRemoved(AncestorEvent event) 
        {
            SetTotal(pl);
        }
    }
    
    int total = 0;
    public void SetTotal(ArrayList<ProductList> pl)
    {
        total = 0;
        for (int i = 0; i < pl.size(); i++)
        {
            total += (pl.get(i).getJumlah()*pl.get(i).getPoint());
        }
        this.TotalPoint.setText("Total : " + total);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Back;
    private javax.swing.JLabel BackButton;
    private javax.swing.JPanel IsiKonten;
    private javax.swing.JPanel Judul;
    private javax.swing.JLabel PointUser;
    private javax.swing.JPanel PointUserPanel;
    private javax.swing.JPanel Reset;
    private javax.swing.JPanel Submit;
    private javax.swing.JPanel Total;
    private javax.swing.JLabel TotalPoint;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane scroll;
    // End of variables declaration//GEN-END:variables
}
