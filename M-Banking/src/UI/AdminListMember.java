/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import RoundedField.RoundJPanel;
import ScrollBar.MyScrollBarUI;
import java.awt.Color;
import java.awt.Container;
import java.awt.Dimension;
import java.awt.Insets;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Comparator;
import java.util.Date;
import javax.swing.JComponent;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JViewport;
import javax.swing.ListModel;
import javax.swing.ListSelectionModel;
import javax.swing.ScrollPaneLayout;
import javax.swing.SwingUtilities;
import m.banking.Gold;
import m.banking.Member;
import m.banking.Platinum;
import m.banking.Silver;

/**
 *
 * @author LINGGO
 */
public class AdminListMember extends javax.swing.JPanel {

    /**
     * Creates new form AdminNewMember
     */
    ArrayList<Member> requestMember;
    int idx = -1;
    public AdminListMember() {
        initComponents();
        showAllRequestMember();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scroll = new javax.swing.JScrollPane();
        listnewMember = new javax.swing.JPanel();
        sort = new RoundJPanel(25);
        sortLbl = new javax.swing.JLabel();
        addSaldo = new RoundJPanel(25);
        jLabel2 = new javax.swing.JLabel();
        addTagihan = new RoundJPanel(25);
        jLabel3 = new javax.swing.JLabel();
        deleteMember = new RoundJPanel(25);
        jLabel4 = new javax.swing.JLabel();
        banned = new RoundJPanel(25);
        bannnedLbl = new javax.swing.JLabel();

        setBackground(new java.awt.Color(250, 243, 243));

        scroll.setBackground(new java.awt.Color(250, 243, 243));
        scroll.setBorder(null);
        scroll.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        scroll.setLayout(new ScrollPaneLayout() {
            @Override
            public void layoutContainer(Container parent) {
                JScrollPane scrollPane = (JScrollPane) parent;

                Rectangle availR = scrollPane.getBounds();
                availR.x = availR.y = 0;

                Insets parentInsets = parent.getInsets();
                availR.x = parentInsets.left;
                availR.y = parentInsets.top;
                availR.width -= parentInsets.left + parentInsets.right;
                availR.height -= parentInsets.top + parentInsets.bottom;

                Rectangle vsbR = new Rectangle();
                vsbR.width = 12;
                vsbR.height = availR.height;
                vsbR.x = availR.x + availR.width - vsbR.width;
                vsbR.y = availR.y;

                if (viewport != null) {
                    viewport.setBounds(availR);
                }
                if (vsb != null) {
                    vsb.setVisible(true);
                    vsb.setBounds(vsbR);
                }
            }
        });
        scroll.getVerticalScrollBar().setUI(new MyScrollBarUI());
        MouseAdapter ma = new MouseAdapter() {

            private Point origin;

            @Override
            public void mousePressed(MouseEvent e) {
                origin = new Point(e.getPoint());
            }

            @Override
            public void mouseReleased(MouseEvent e) {
            }

            @Override
            public void mouseDragged(MouseEvent e) {
                if (origin != null) {
                    JViewport viewPort = (JViewport) SwingUtilities.getAncestorOfClass(JViewport.class, listnewMember);
                    if (viewPort != null) {
                        int deltaX = origin.x - e.getX();
                        int deltaY = origin.y - e.getY();

                        Rectangle view = viewPort.getViewRect();
                        view.x += deltaX;
                        view.y += deltaY;

                        listnewMember.scrollRectToVisible(view);
                    }
                }
            }

        };

        listnewMember.addMouseListener(ma);
        listnewMember.addMouseMotionListener(ma);

        listnewMember.setBackground(new java.awt.Color(250, 243, 243));

        javax.swing.GroupLayout listnewMemberLayout = new javax.swing.GroupLayout(listnewMember);
        listnewMember.setLayout(listnewMemberLayout);
        listnewMemberLayout.setHorizontalGroup(
            listnewMemberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 488, Short.MAX_VALUE)
        );
        listnewMemberLayout.setVerticalGroup(
            listnewMemberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 542, Short.MAX_VALUE)
        );

        scroll.setViewportView(listnewMember);

        sort.setBackground(new java.awt.Color(255, 204, 51));
        sort.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        sort.setOpaque(false);
        sort.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sortMouseClicked(evt);
            }
        });

        sortLbl.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        sortLbl.setForeground(new java.awt.Color(0, 0, 0));
        sortLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        sortLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/m/banking/Asset/sort.png"))); // NOI18N
        sortLbl.setText("Sort");

        javax.swing.GroupLayout sortLayout = new javax.swing.GroupLayout(sort);
        sort.setLayout(sortLayout);
        sortLayout.setHorizontalGroup(
            sortLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sortLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(sortLbl, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                .addGap(4, 4, 4))
        );
        sortLayout.setVerticalGroup(
            sortLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sortLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(sortLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        addSaldo.setBackground(new java.awt.Color(0, 255, 255));
        addSaldo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addSaldo.setOpaque(false);
        addSaldo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addSaldoMouseClicked(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/m/banking/Asset/add.png"))); // NOI18N
        jLabel2.setText("Balance");

        javax.swing.GroupLayout addSaldoLayout = new javax.swing.GroupLayout(addSaldo);
        addSaldo.setLayout(addSaldoLayout);
        addSaldoLayout.setHorizontalGroup(
            addSaldoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addSaldoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        addSaldoLayout.setVerticalGroup(
            addSaldoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addSaldoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        addTagihan.setBackground(new java.awt.Color(51, 255, 51));
        addTagihan.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addTagihan.setOpaque(false);
        addTagihan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addTagihanMouseClicked(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/m/banking/Asset/bill.png"))); // NOI18N
        jLabel3.setText("Bill");

        javax.swing.GroupLayout addTagihanLayout = new javax.swing.GroupLayout(addTagihan);
        addTagihan.setLayout(addTagihanLayout);
        addTagihanLayout.setHorizontalGroup(
            addTagihanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addTagihanLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        addTagihanLayout.setVerticalGroup(
            addTagihanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addTagihanLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        deleteMember.setBackground(new java.awt.Color(255, 102, 102));
        deleteMember.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        deleteMember.setOpaque(false);
        deleteMember.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteMemberMouseClicked(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/m/banking/Asset/trash.png"))); // NOI18N
        jLabel4.setText("Delete");

        javax.swing.GroupLayout deleteMemberLayout = new javax.swing.GroupLayout(deleteMember);
        deleteMember.setLayout(deleteMemberLayout);
        deleteMemberLayout.setHorizontalGroup(
            deleteMemberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(deleteMemberLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        deleteMemberLayout.setVerticalGroup(
            deleteMemberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(deleteMemberLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        banned.setBackground(new java.awt.Color(255, 51, 102));
        banned.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        banned.setOpaque(false);
        banned.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bannedMouseClicked(evt);
            }
        });

        bannnedLbl.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        bannnedLbl.setForeground(new java.awt.Color(0, 0, 0));
        bannnedLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        bannnedLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/m/banking/Asset/sort.png"))); // NOI18N
        bannnedLbl.setText("Banned");

        javax.swing.GroupLayout bannedLayout = new javax.swing.GroupLayout(banned);
        banned.setLayout(bannedLayout);
        bannedLayout.setHorizontalGroup(
            bannedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bannedLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(bannnedLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(4, 4, 4))
        );
        bannedLayout.setVerticalGroup(
            bannedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bannedLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(bannnedLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scroll)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(banned, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(sort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addSaldo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addTagihan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteMember, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(scroll, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(addSaldo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addTagihan, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(deleteMember, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(sort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(banned, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(56, 56, 56))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void sortMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sortMouseClicked
        // TODO add your handling code here:
        ArrayList<Member> Account = new ArrayList<>();
        try {
            FileInputStream file = new FileInputStream("Account.ser");
            ObjectInputStream in = new ObjectInputStream(file);

            Account = (ArrayList<Member>) in.readObject();

            in.close();
            file.close();
        }
        catch(IOException ex) {
            System.out.println("IOException is caught");
        }
        catch(ClassNotFoundException ex) {
            System.out.println("ClassNotFoundException is caught");
        }
        Collections.sort(Account, new Comparator<Member>(){
            @Override
            public int compare(Member t1, Member t2) {
                String mt1 = t1.getNama().toUpperCase();
                String mt2 = t2.getNama().toUpperCase();
                if (mt1.compareTo(mt2)<0){
                    return -1;
                }
                return 0;
            }
        });
        try {
            FileOutputStream file = new FileOutputStream("Account.ser");
            ObjectOutputStream out = new ObjectOutputStream(file);

            out.writeObject(Account);

            out.close();
            file.close();

            System.out.println("Object has been serialized");

        }
        catch(IOException ex) {
            System.out.println("IOException is caught");
        }
        
        showAllRequestMember();
    }//GEN-LAST:event_sortMouseClicked

    private void deleteMemberMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteMemberMouseClicked
        // TODO add your handling code here:
        if (idx != -1){
            ArrayList<Member> Account = new ArrayList<>();
            try {
                FileInputStream file = new FileInputStream("Account.ser");
                ObjectInputStream in = new ObjectInputStream(file);

                Account = (ArrayList<Member>) in.readObject();

                in.close();
                file.close();
            }
            catch(IOException ex) {
                System.out.println("IOException is caught");
            }
            catch(ClassNotFoundException ex) {
                System.out.println("ClassNotFoundException is caught");
            }
            Account.remove(idx);
            try {
                FileOutputStream file = new FileOutputStream("Account.ser");
                ObjectOutputStream out = new ObjectOutputStream(file);

                out.writeObject(Account);

                out.close();
                file.close();

                System.out.println("Object has been serialized");

            }
            catch(IOException ex) {
                System.out.println("IOException is caught");
            }
            JOptionPane.showMessageDialog(this, "Success Delete");
        }
        else {
            JOptionPane.showMessageDialog(this, "Pick a new member pls");
        }
        idx = -1;
        showAllRequestMember();
    }//GEN-LAST:event_deleteMemberMouseClicked

    private void addSaldoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addSaldoMouseClicked
        // TODO add your handling code here:
        if (idx != -1){
            String input = JOptionPane.showInputDialog(this, "Add Balance");
            if (!isNumeric(input)){
                addSaldoMouseClicked(evt);
            }
            else {
                int saldo = Integer.parseInt(input);
                if (saldo>=0){
                    ArrayList<Member> Account = new ArrayList<>();
                    try {
                        FileInputStream file = new FileInputStream("Account.ser");
                        ObjectInputStream in = new ObjectInputStream(file);

                        Account = (ArrayList<Member>) in.readObject();

                        in.close();
                        file.close();
                    }
                    catch(IOException ex) {
                        System.out.println("IOException is caught");
                    }
                    catch(ClassNotFoundException ex) {
                        System.out.println("ClassNotFoundException is caught");
                    }
                    Account.get(idx).setRupiah(Account.get(idx).getRupiah()+saldo);
                    JOptionPane.showMessageDialog(this, "Success add Balance");
                    try {
                        FileOutputStream file = new FileOutputStream("Account.ser");
                        ObjectOutputStream out = new ObjectOutputStream(file);

                        out.writeObject(Account);

                        out.close();
                        file.close();

                        System.out.println("Object has been serialized");

                    }
                    catch(IOException ex) {
                        System.out.println("IOException is caught");
                    }
                    showAllRequestMember();
                }
                else {
                    addSaldoMouseClicked(evt);
                }
            }
        }
        else {
            JOptionPane.showMessageDialog(this, "Pick a new member pls");
        }
    }//GEN-LAST:event_addSaldoMouseClicked

    private void addTagihanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addTagihanMouseClicked
        // TODO add your handling code here:
        if (idx != -1){
            String namaMerchandise = JOptionPane.showInputDialog(this, "Name Bill");
            String jumlahTagihan =  "";
            boolean stop = false;
            do {
                jumlahTagihan = JOptionPane.showInputDialog(this, "Bill");
                if (isNumeric(jumlahTagihan)){
                    stop = true;
                }
            }
            while (!stop);
       
            ArrayList<Member> Account = new ArrayList<>();
            try {
                FileInputStream file = new FileInputStream("Account.ser");
                ObjectInputStream in = new ObjectInputStream(file);

                Account = (ArrayList<Member>) in.readObject();

                in.close();
                file.close();
            }
            catch(IOException ex) {
                System.out.println("IOException is caught1");
            }
            catch(ClassNotFoundException ex) {
                System.out.println("ClassNotFoundException is caught");
            }
            
            int va = Account.get(idx).randomVA();
            double temp = Double.parseDouble(jumlahTagihan);
            Account.get(idx).addTagihan(namaMerchandise, temp, va);
            JOptionPane.showMessageDialog(this, "Success add a bill \""+ namaMerchandise + "\" - " + priceWithoutDecimal(temp)+ " - Virtual Account : " + va);
            try {
                FileOutputStream file = new FileOutputStream("Account.ser");
                ObjectOutputStream out = new ObjectOutputStream(file);

                out.writeObject(Account);

                out.close();
                file.close();

                System.out.println("Object has been serialized");

            }
            catch(IOException ex) {
                System.out.println("IOException is caught2");
                System.out.println(ex);
            }
        }
        else {
            JOptionPane.showMessageDialog(this, "Pick a new member pls");
        }
        idx = -1;
        showAllRequestMember();
    }//GEN-LAST:event_addTagihanMouseClicked

    private void bannedMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bannedMouseClicked
        // TODO add your handling code here:
        if (idx != -1){
            ArrayList<Member> Account = new ArrayList<>();
            try {
                FileInputStream file = new FileInputStream("Account.ser");
                ObjectInputStream in = new ObjectInputStream(file);

                Account = (ArrayList<Member>) in.readObject();

                in.close();
                file.close();
            }
            catch(IOException ex) {
                System.out.println("IOException is caught1");
            }
            catch(ClassNotFoundException ex) {
                System.out.println("ClassNotFoundException is caught");
            }
            
            ArrayList<Member> banned = new ArrayList<>();
            try {
                FileInputStream file = new FileInputStream("BannedAccount.ser");
                ObjectInputStream in = new ObjectInputStream(file);

                banned = (ArrayList<Member>) in.readObject();

                in.close();
                file.close();
            }
            catch(IOException ex) {
                System.out.println("IOException is caught");
            }
            catch(ClassNotFoundException ex) {
                System.out.println("ClassNotFoundException is caught");
            }
            
            banned.add(Account.get(idx));
            Account.remove(idx);
            
            try {
                FileOutputStream file = new FileOutputStream("Account.ser");
                ObjectOutputStream out = new ObjectOutputStream(file);

                out.writeObject(Account);

                out.close();
                file.close();

                System.out.println("Object has been serialized");

            }
            catch(IOException ex) {
                System.out.println("IOException is caught2");
                System.out.println(ex);
            }
            
            try {
                FileOutputStream file = new FileOutputStream("BannedAccount.ser");
                ObjectOutputStream out = new ObjectOutputStream(file);

                out.writeObject(banned);

                out.close();
                file.close();

                System.out.println("Object has been serialized");

            }
            catch(IOException ex) {
                System.out.println("IOException is caught");
            }
            
            JOptionPane.showMessageDialog(this, "Success banned Member " + banned.get(banned.size()-1).getNama());
        }
        else {
            JOptionPane.showMessageDialog(this, "Pick a new member pls");
        }
        idx = -1;
        showAllRequestMember();
    }//GEN-LAST:event_bannedMouseClicked

    public boolean isNumeric(String str){
        for (char c : str.toCharArray())
        {
            if (!Character.isDigit(c)) {
                return false;
            }
        }
        return true;
    }
    
    public void showAllRequestMember(){
        ArrayList<Member> Account = new ArrayList<>();
        ArrayList<AdminCardListMember> ACLM = new ArrayList<>();
        try {
            FileInputStream file = new FileInputStream("Account.ser");
            ObjectInputStream in = new ObjectInputStream(file);

            Account = (ArrayList<Member>) in.readObject();

            in.close();
            file.close();
        }
        catch(IOException ex) {
            System.out.println("IOException is caught");
        }
        catch(ClassNotFoundException ex) {
            System.out.println("ClassNotFoundException is caught");
        }
        listnewMember.removeAll();
        if ((205+10)*Account.size() >= 460) {
            listnewMember.setPreferredSize(new Dimension(470, (205+10)*Account.size()));
        }
        else {
            listnewMember.setPreferredSize(new Dimension(488, 460));
        }
        for (int i = 0; i < Account.size(); i++) {
            ACLM.add(new AdminCardListMember());
            ACLM.get(i).setName("ALNM"+i);
            ACLM.get(i).setFullName("Full Name     : " + Account.get(i).getNama().toUpperCase());
            String tempnorek = Account.get(i).getNoRekening().substring(0,4) + "-" + Account.get(i).getNoRekening().substring(4,8) + "-" + Account.get(i).getNoRekening().substring(8,12) + "-" + Account.get(i).getNoRekening().substring(12,16);
            ACLM.get(i).setNoRek("Card Number   : " + tempnorek);
            String tempSaldo = Double.toString(Account.get(i).getRupiah());
            ACLM.get(i).setSaldo("Balance       : " + priceWithoutDecimal(Account.get(i).getRupiah()));
            String jenis = "";
            if (Account.get(i) instanceof Silver){
                jenis = "Silver";
                ACLM.get(i).setNewColorKartu(229, 228, 226);
            }
            else if (Account.get(i) instanceof Gold){
                jenis = "Gold";
                ACLM.get(i).setNewColorKartu(255,215,0);
            }
            else if (Account.get(i) instanceof Platinum){
                jenis = "Platinum";
                ACLM.get(i).setNewColorKartu(128,128,128);
            }
            ACLM.get(i).setJenisKartu(jenis);
            ACLM.get(i).setBounds(0, (205+10)*i, 470,205);
            ACLM.get(i).setVisible(true);
            ACLM.get(i).addMouseListener(new MouseAdapter() {
                public void mouseClicked(MouseEvent e){
                    idx = ACLM.indexOf(e.getComponent());
                    resetBGPanel(ACLM);
                    ACLM.get(idx).setNewColorBG(84,190,229);
                }
            });
            listnewMember.add(ACLM.get(i));
        }
        listnewMember.revalidate();
        listnewMember.repaint();
    }

    public void resetBGPanel(ArrayList<AdminCardListMember> ACLM){
        ArrayList<Member> Account = new ArrayList<>();
        try {
            FileInputStream file = new FileInputStream("Account.ser");
            ObjectInputStream in = new ObjectInputStream(file);

            Account = (ArrayList<Member>) in.readObject();

            in.close();
            file.close();
        }
        catch(IOException ex) {
            System.out.println("IOException is caught");
        }
        catch(ClassNotFoundException ex) {
            System.out.println("ClassNotFoundException is caught");
        }
        for (int j = 0; j < Account.size(); j++) {
            ACLM.get(j).setNewColorBG(255,255,255);
        }
    }
    
    public String priceWithoutDecimal (Double price) {
        DecimalFormat formatter = new DecimalFormat("###,###,###.##");
        return formatter.format(price);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel addSaldo;
    private javax.swing.JPanel addTagihan;
    private javax.swing.JPanel banned;
    private javax.swing.JLabel bannnedLbl;
    private javax.swing.JPanel deleteMember;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel listnewMember;
    private javax.swing.JScrollPane scroll;
    private javax.swing.JPanel sort;
    private javax.swing.JLabel sortLbl;
    // End of variables declaration//GEN-END:variables
}
